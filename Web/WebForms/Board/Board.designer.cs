#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForms.Board
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Example")]
	public partial class BoardDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void Insertboard(board instance);
    partial void Updateboard(board instance);
    partial void Deleteboard(board instance);
    #endregion
		
		public BoardDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ExampleConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BoardDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BoardDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BoardDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BoardDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<board> board
		{
			get
			{
				return this.GetTable<board>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.board")]
	public partial class board : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _bno;
		
		private string _title;
		
		private string _writer;
		
		private string _content;
		
		private System.Nullable<System.DateTime> _regdate;
		
		private System.Nullable<int> _hit;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbnoChanging(long value);
    partial void OnbnoChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnwriterChanging(string value);
    partial void OnwriterChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnregdateChanging(System.Nullable<System.DateTime> value);
    partial void OnregdateChanged();
    partial void OnhitChanging(System.Nullable<int> value);
    partial void OnhitChanged();
    #endregion
		
		public board()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bno", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long bno
		{
			get
			{
				return this._bno;
			}
			set
			{
				if ((this._bno != value))
				{
					this.OnbnoChanging(value);
					this.SendPropertyChanging();
					this._bno = value;
					this.SendPropertyChanged("bno");
					this.OnbnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_writer", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string writer
		{
			get
			{
				return this._writer;
			}
			set
			{
				if ((this._writer != value))
				{
					this.OnwriterChanging(value);
					this.SendPropertyChanging();
					this._writer = value;
					this.SendPropertyChanged("writer");
					this.OnwriterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regdate", DbType="Date")]
		public System.Nullable<System.DateTime> regdate
		{
			get
			{
				return this._regdate;
			}
			set
			{
				if ((this._regdate != value))
				{
					this.OnregdateChanging(value);
					this.SendPropertyChanging();
					this._regdate = value;
					this.SendPropertyChanged("regdate");
					this.OnregdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hit", DbType="Int")]
		public System.Nullable<int> hit
		{
			get
			{
				return this._hit;
			}
			set
			{
				if ((this._hit != value))
				{
					this.OnhitChanging(value);
					this.SendPropertyChanging();
					this._hit = value;
					this.SendPropertyChanged("hit");
					this.OnhitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
